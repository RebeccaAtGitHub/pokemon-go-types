{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","className","style","width","height","defaultColDef","filter","resizable","rowData","Typ","Stark","Verletzbar","rowSelection","field","pinned","lockPinned","sortable","headerName","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8OA6DeA,EAxDH,WAsBT,OACI,qBAAKC,UAAU,kBAAkBC,MAAQ,CAAEC,MAAO,OAAQC,OAAQ,SAAlE,SACI,eAAC,cAAD,CACKC,cAAe,CACXC,QAAQ,EACRC,WAAW,EACXJ,MAAO,KAEXD,MAAO,CACHC,MAAO,OACPC,OAAQ,SAEZI,QAjCG,CACb,CAACC,IAAK,QAASC,MAAO,uCAAwCC,WAAY,wBAC1E,CAACF,IAAK,SAAUC,MAAO,SAAUC,WAAY,oBAC7C,CAACF,IAAK,MAAOC,MAAO,+BAAgCC,WAAY,gCAChE,CAACF,IAAK,UAAWC,MAAO,eAAgBC,WAAY,SACpD,CAACF,IAAK,MAAOC,MAAO,yBAA0BC,WAAY,eAC1D,CAACF,IAAK,QAASC,MAAO,gCAA8BC,WAAY,0BAChE,CAACF,IAAK,OAAQC,MAAO,2BAAyBC,WAAY,yBAC1D,CAACF,IAAK,QAASC,MAAO,gBAAiBC,WAAY,kBACnD,CAACF,IAAK,UAAWC,MAAO,6BAA2BC,WAAY,wCAC/D,CAACF,IAAK,OAAQC,MAAO,eAAgBC,WAAY,iBACjD,CAACF,IAAK,WAASC,MAAO,2BAA4BC,WAAY,wBAC9D,CAACF,IAAK,QAASC,MAAO,uCAAwCC,WAAY,qBAC1E,CAACF,IAAK,SAAUC,MAAO,GAAIC,WAAY,SACvC,CAACF,IAAK,UAAWC,MAAO,yBAA0BC,WAAY,oCAC9D,CAACF,IAAK,SAAUC,MAAO,cAAeC,WAAY,4BAClD,CAACF,IAAK,QAASC,MAAO,oBAAqBC,WAAY,uBACvD,CAACF,IAAK,UAAWC,MAAO,gBAAiBC,WAAY,wBACrD,CAACF,IAAK,SAAUC,MAAO,wBAAyBC,WAAY,qBAgBlDC,aAAa,WAXlB,UAYI,cAAC,eAAD,CACKC,MAAM,MACNC,OAAO,OACPC,YAAa,EACbZ,MAAO,IACPa,UAAW,IAEhB,cAAC,eAAD,CACKH,MAAM,QACNI,WAAW,gBAEhB,cAAC,eAAD,CACKJ,MAAM,aACNI,WAAW,yBC1ChBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7cdd1763.chunk.js","sourcesContent":["import React from 'react';\r\nimport {AgGridColumn, AgGridReact} from 'ag-grid-react';\r\n\r\nimport './App.scss';\r\n\r\nconst App = () => {\r\n   const rowData = [\r\n      {Typ: \"Boden\", Stark: \"Gift, Gestein, Stahl, Feuer, Elektro\", Verletzbar: \"Wasser, Pflanze, Eis\"},\r\n      {Typ: \"Drache\", Stark: \"Drache\", Verletzbar: \"Eis, Drache, Fee\"},\r\n      {Typ: \"Eis\", Stark: \"Flug, Boden, Pflanze, Drache\", Verletzbar: \"Kampf, Gestein, Stahl, Feuer\"},\r\n      {Typ: \"Elektro\", Stark: \"Flug, Wasser\", Verletzbar: \"Boden\"},\r\n      {Typ: \"Fee\", Stark: \"Kampf, Drache, Unlicht\", Verletzbar: \"Gift, Stahl\"},\r\n      {Typ: \"Feuer\", Stark: \"Käfer, Stahl, Pflanze, Eis\", Verletzbar: \"Boden, Gestein, Wasser\"},\r\n      {Typ: \"Flug\", Stark: \"Kampf, Käfer, Pflanze\", Verletzbar: \"Gestein, Elektro, Eis\"},\r\n      {Typ: \"Geist\", Stark: \"Geist, Psycho\", Verletzbar: \"Geist, Unlicht\"},\r\n      {Typ: \"Gestein\", Stark: \"Flug, Käfer, Feuer, Eis\", Verletzbar: \"Kampf, Boden, Stahl, Wasser, Pflanze\"},\r\n      {Typ: \"Gift\", Stark: \"Pflanze, Fee\", Verletzbar: \"Boden, Psycho\"},\r\n      {Typ: \"Käfer\", Stark: \"Pflanze, Psycho, Unlicht\", Verletzbar: \"Flug, Gestein, Feuer\"},\r\n      {Typ: \"Kampf\", Stark: \"Normal, Gestein, Stahl, Eis, Unlicht\", Verletzbar: \"Flug, Psycho, Fee\"},\r\n      {Typ: \"Normal\", Stark: \"\", Verletzbar: \"Kampf\"},\r\n      {Typ: \"Pflanze\", Stark: \"Boden, Gestein, Wasser\", Verletzbar: \"Flug, Gift, Käfer, Feuer, Eis\"},\r\n      {Typ: \"Psycho\", Stark: \"Kampf, Gift\", Verletzbar: \"Käfer, Geist, Unlicht\"},\r\n      {Typ: \"Stahl\", Stark: \"Gestein, Eis, Fee\", Verletzbar: \"Kampf, Boden, Feuer\"},\r\n      {Typ: \"Unlicht\", Stark: \"Geist, Psycho\", Verletzbar: \"Kampf, Käfer, Fee\"},\r\n      {Typ: \"Wasser\", Stark: \"Boden, Gestein, Feuer\", Verletzbar: \"Pflanze, Elektro\"}\r\n   ];\r\n\r\n   return (\r\n       <div className=\"ag-theme-alpine\" style= {{ width: '100%', height: '100vh' }} >\r\n           <AgGridReact \r\n                defaultColDef={{\r\n                    filter: true,\r\n                    resizable: true,\r\n                    width: 240,\r\n                }}\r\n                style={{ \r\n                    width: '100%', \r\n                    height: '100%;', \r\n                }}\r\n                rowData={rowData}\r\n                rowSelection=\"multiple\">\r\n               <AgGridColumn \r\n                    field=\"Typ\" \r\n                    pinned=\"left\" \r\n                    lockPinned={ true } \r\n                    width={100} \r\n                    sortable={ true }\r\n                ></AgGridColumn>\r\n               <AgGridColumn \r\n                    field=\"Stark\" \r\n                    headerName=\"Stark gegen\" \r\n                ></AgGridColumn>\r\n               <AgGridColumn \r\n                    field=\"Verletzbar\" \r\n                    headerName=\"Verletzbar von\"\r\n                ></AgGridColumn>\r\n           </AgGridReact>\r\n       </div>\r\n   );\r\n};\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}